{
    "sourceFile": "index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 137,
            "patches": [
                {
                    "date": 1727426341370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1727429785290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,11 @@\n // 设置根路由  \n app.get('/', (req, res) => {\n   res.send('Hello, Express!');\n });\n+app.get('/rodin', (req, res) => {\n+  res.send('Hello, Express!');\n+}\n \n // 启动服务器  \n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n"
                },
                {
                    "date": 1727429792398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n app.get('/', (req, res) => {\n   res.send('Hello, Express!');\n });\n app.get('/rodin', (req, res) => {\n-  res.send('Hello, Express!');\n-}\n+  res.send('Hello, rodin!');\n+});\n \n // 启动服务器  \n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n"
                },
                {
                    "date": 1727433499170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import express from 'express';\n-\n+import rodin from 'rodin.js';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727433531227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n app.get('/', (req, res) => {\n   res.send('Hello, Express!');\n });\n app.get('/rodin', (req, res) => {\n-  res.send('Hello, rodin!');\n+  res.send('Hello, rodin!' + rodin.a);\n });\n \n // 启动服务器  \n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1727433551438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n app.get('/', (req, res) => {\n   res.send('Hello, Express!');\n });\n app.get('/rodin', (req, res) => {\n-  res.send('Hello, rodin!' + rodin.a);\n+  res.send('Hello, rodin!');\n });\n \n // 启动服务器  \n app.listen(PORT, () => {\n"
                },
                {
                    "date": 1727433569553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import express from 'express';\n-import rodin from 'rodin.js';\n+import rodin from './rodin.js';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727433579449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import express from 'express';\n-import rodin from './rodin.js';\n+import rodin from './rodin';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727433610482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import express from 'express';\n-import rodin from './rodin';\n+import rodin from '../rodin.js';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727434537138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import express from 'express';\n-import rodin from '../rodin.js';\n+// index.js  \n+const greeting = require('./rodin'); // 引入 module1.js  \n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727434581435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import express from 'express';\n // index.js  \n-const greeting = require('./rodin'); // 引入 module1.js  \n+import { greeting } from './rodin.js';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727434741067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import express from 'express';\n // index.js  \n-import { greeting } from './rodin.js';\n+import rodin from './rodin.js';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727434770287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n app.get('/', (req, res) => {\n   res.send('Hello, Express!');\n });\n app.get('/rodin', (req, res) => {\n+  rodin.print();\n   res.send('Hello, rodin!');\n });\n \n // 启动服务器  \n"
                },
                {
                    "date": 1727435930664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import express from 'express';\n // index.js  \n-import rodin from './rodin.js';\n+import api from './api.js';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727435936595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n app.get('/', (req, res) => {\n   res.send('Hello, Express!');\n });\n app.get('/rodin', (req, res) => {\n-  rodin.print();\n+  api.rodin();\n   res.send('Hello, rodin!');\n });\n \n // 启动服务器  \n"
                },
                {
                    "date": 1727438250436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,12 @@\n app.get('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n });\n+app.get('/status', (req, res) => {\n+  api.status();\n+  res.send('Hello, status!');\n+}\n \n // 启动服务器  \n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n"
                },
                {
                    "date": 1727438300338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,27 @@\n });\n app.get('/status', (req, res) => {\n   api.status();\n   res.send('Hello, status!');\n+};\n+\n+/*\n+Response: {\n+  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n+  submit_time: '2024-09-27T11:56:44.756Z',\n+  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n+  jobs: {\n+    uuids: [\n+      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n+      '69cb46db-0690-47c9-b98f-412b322285da',\n+      '179526dc-5d19-4742-b498-856696012ac0',\n+      'b4558a96-4512-4fb5-b68e-134077629083',\n+      '731ebfdd-a29e-4374-9f89-342650c24373'\n+    ],\n+    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n+  }\n }\n+  */\n \n // 启动服务器  \n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n"
                },
                {
                    "date": 1727438418154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.get('/status', (req, res) => {\n   api.status();\n   res.send('Hello, status!');\n-};\n+});\n \n /*\n Response: {\n   message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n"
                },
                {
                    "date": 1727441197427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import express from 'express';\n // index.js  \n import api from './api.js';\n+import polygen from './polygen.js';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727441209213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,12 @@\n app.get('/status', (req, res) => {\n   api.status();\n   res.send('Hello, status!');\n });\n-\n+app.get('/polygen', (req, res) => {\n+  polygen.polygen();\n+  res.send('Hello, polygen!');\n+}\n /*\n Response: {\n   message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n   submit_time: '2024-09-27T11:56:44.756Z',\n"
                },
                {
                    "date": 1727441258991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,11 @@\n   api.status();\n   res.send('Hello, status!');\n });\n app.get('/polygen', (req, res) => {\n-  polygen.polygen();\n+  polygen.test();\n   res.send('Hello, polygen!');\n-}\n+});\n /*\n Response: {\n   message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n   submit_time: '2024-09-27T11:56:44.756Z',\n"
                },
                {
                    "date": 1727441273023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   api.status();\n   res.send('Hello, status!');\n });\n app.get('/polygen', (req, res) => {\n-  polygen.test();\n+  polygen.test(res);\n   res.send('Hello, polygen!');\n });\n /*\n Response: {\n"
                },
                {
                    "date": 1727441321296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n   api.status();\n   res.send('Hello, status!');\n });\n app.get('/polygen', (req, res) => {\n-  polygen.test(res);\n-  res.send('Hello, polygen!');\n+\n+  res.send(polygen.test());\n });\n /*\n Response: {\n   message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n"
                },
                {
                    "date": 1727442111462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   res.send('Hello, status!');\n });\n app.get('/polygen', (req, res) => {\n \n-  res.send(polygen.test());\n+  res.send(polygen.md5());\n });\n /*\n Response: {\n   message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n"
                },
                {
                    "date": 1727670072734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n app.get('/', (req, res) => {\n+  const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hello, Express!');\n });\n app.get('/rodin', (req, res) => {\n   api.rodin();\n"
                },
                {
                    "date": 1727670080921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n // 设置根路由  \n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hello, Express!');\n+  res.send('Hello, Express!' + token);\n });\n app.get('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n"
                },
                {
                    "date": 1727670088688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n // 设置根路由  \n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hello, Express!' + token);\n+  res.send('Hel1lo, Express!' + token);\n });\n app.get('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n"
                },
                {
                    "date": 1727670096461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,13 +4,8 @@\n import polygen from './polygen.js';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n-// 设置根路由  \n-app.get('/', (req, res) => {\n-  const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1lo, Express!' + token);\n-});\n app.get('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n });\n"
                },
                {
                    "date": 1727670187810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,13 @@\n import polygen from './polygen.js';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n+// 设置根路由  \n+app.get('/', (req, res) => {\n+  const token = req.headers['authorization']?.split(' ')[1];\n+  res.send('Hel1lo,1111 Express!' + token);\n+});\n app.get('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n });\n"
                },
                {
                    "date": 1727670204508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n // 设置根路由  \n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1lo,1111 Express!' + token);\n+\n });\n app.get('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n"
                },
                {
                    "date": 1727670213147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n // 设置根路由  \n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n-\n+  res.send('Hel1lo,2 Express!' + token);\n });\n app.get('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n"
                },
                {
                    "date": 1727670233281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n // 设置根路由  \n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1lo,2 Express!' + token);\n+  res.send('Hel1222lo,2 Express!' + token);\n });\n app.get('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n"
                },
                {
                    "date": 1727670487666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n // 设置根路由  \n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1222lo,2 Express!' + token);\n+  res.send('Hel1222是山山水水lo,2 Express!' + token);\n });\n app.get('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n"
                },
                {
                    "date": 1727670624785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,11 @@\n \n // 设置根路由  \n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1222是山山水水lo,2 Express!' + token);\n+  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n-app.get('/rodin', (req, res) => {\n+app.post('/rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n });\n app.get('/status', (req, res) => {\n"
                },
                {
                    "date": 1727670964421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n-app.post('/rodin', (req, res) => {\n+app.post('/v1/ai-rodin', (req, res) => {\n   api.rodin();\n   res.send('Hello, rodin!');\n });\n app.get('/status', (req, res) => {\n"
                },
                {
                    "date": 1727670972605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', (req, res) => {\n-  api.rodin();\n+  //api.rodin();\n   res.send('Hello, rodin!');\n });\n app.get('/status', (req, res) => {\n   api.status();\n"
                },
                {
                    "date": 1727671114385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,35 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', (req, res) => {\n+  if (req.method === 'POST') {\n+    const targetUrl = 'http://目标服务器地址'; // 替换为目标 URL\n+\n+    const options = {\n+      method: 'POST',\n+      headers: {\n+        ...req.headers,\n+        'Content-Length': req.headers['content-length'], // 确保包含 Content-Length\n+      },\n+    };\n+\n+    const proxyReq = http.request(targetUrl, options, (proxyRes) => {\n+      res.writeHead(proxyRes.statusCode, proxyRes.headers);\n+      proxyRes.pipe(res, { end: true });\n+    });\n+\n+    req.pipe(proxyReq, { end: true });\n+\n+    proxyReq.on('error', (err) => {\n+      console.error(err);\n+      res.writeHead(500);\n+      res.end('Internal Server Error');\n+    });\n+  } else {\n+    res.writeHead(405); // 方法不被允许\n+    res.end();\n+  }\n   //api.rodin();\n   res.send('Hello, rodin!');\n });\n app.get('/status', (req, res) => {\n"
                },
                {
                    "date": 1727671119418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,35 +10,31 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', (req, res) => {\n-  if (req.method === 'POST') {\n-    const targetUrl = 'http://目标服务器地址'; // 替换为目标 URL\n+  const targetUrl = 'http://目标服务器地址'; // 替换为目标 URL\n \n-    const options = {\n-      method: 'POST',\n-      headers: {\n-        ...req.headers,\n-        'Content-Length': req.headers['content-length'], // 确保包含 Content-Length\n-      },\n-    };\n+  const options = {\n+    method: 'POST',\n+    headers: {\n+      ...req.headers,\n+      'Content-Length': req.headers['content-length'], // 确保包含 Content-Length\n+    },\n+  };\n \n-    const proxyReq = http.request(targetUrl, options, (proxyRes) => {\n-      res.writeHead(proxyRes.statusCode, proxyRes.headers);\n-      proxyRes.pipe(res, { end: true });\n-    });\n+  const proxyReq = http.request(targetUrl, options, (proxyRes) => {\n+    res.writeHead(proxyRes.statusCode, proxyRes.headers);\n+    proxyRes.pipe(res, { end: true });\n+  });\n \n-    req.pipe(proxyReq, { end: true });\n+  req.pipe(proxyReq, { end: true });\n \n-    proxyReq.on('error', (err) => {\n-      console.error(err);\n-      res.writeHead(500);\n-      res.end('Internal Server Error');\n-    });\n-  } else {\n-    res.writeHead(405); // 方法不被允许\n-    res.end();\n-  }\n+  proxyReq.on('error', (err) => {\n+    console.error(err);\n+    res.writeHead(500);\n+    res.end('Internal Server Error');\n+  });\n+\n   //api.rodin();\n   res.send('Hello, rodin!');\n });\n app.get('/status', (req, res) => {\n"
                },
                {
                    "date": 1727671129090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', (req, res) => {\n-  const targetUrl = 'http://目标服务器地址'; // 替换为目标 URL\n+  const targetUrl = 'http://127.0.0.1/81'; // 替换为目标 URL\n \n   const options = {\n     method: 'POST',\n     headers: {\n"
                },
                {
                    "date": 1727671145604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,8 @@\n     res.writeHead(500);\n     res.end('Internal Server Error');\n   });\n \n-  //api.rodin();\n-  res.send('Hello, rodin!');\n });\n app.get('/status', (req, res) => {\n   api.status();\n   res.send('Hello, status!');\n"
                },
                {
                    "date": 1727671164070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', (req, res) => {\n-  const targetUrl = 'http://127.0.0.1/81'; // 替换为目标 URL\n+  const targetUrl = '127.0.0.1/81'; // 替换为目标 URL\n \n   const options = {\n     method: 'POST',\n     headers: {\n"
                },
                {
                    "date": 1727671220748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n import express from 'express';\n // index.js  \n import api from './api.js';\n import polygen from './polygen.js';\n+import http from 'http';\n+\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727671292564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,31 +12,22 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', (req, res) => {\n-  const targetUrl = '127.0.0.1/81'; // 替换为目标 URL\n+  const targetUrl = 'http://127.0.0.1/81'; // 替换为目标 URL\n \n-  const options = {\n-    method: 'POST',\n-    headers: {\n-      ...req.headers,\n-      'Content-Length': req.headers['content-length'], // 确保包含 Content-Length\n-    },\n-  };\n-\n-  const proxyReq = http.request(targetUrl, options, (proxyRes) => {\n-    res.writeHead(proxyRes.statusCode, proxyRes.headers);\n-    proxyRes.pipe(res, { end: true });\n-  });\n-\n-  req.pipe(proxyReq, { end: true });\n-\n-  proxyReq.on('error', (err) => {\n-    console.error(err);\n-    res.writeHead(500);\n-    res.end('Internal Server Error');\n-  });\n-\n+  try {\n+    const response = await axios.post('http://目标服务器地址', req.body, {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n });\n app.get('/status', (req, res) => {\n   api.status();\n   res.send('Hello, status!');\n"
                },
                {
                    "date": 1727671300121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n-app.post('/v1/ai-rodin', (req, res) => {\n+app.post('/v1/ai-rodin', async (req, res) => {\n   const targetUrl = 'http://127.0.0.1/81'; // 替换为目标 URL\n \n   try {\n     const response = await axios.post('http://目标服务器地址', req.body, {\n"
                },
                {
                    "date": 1727671324223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import express from 'express';\n // index.js  \n import api from './api.js';\n import polygen from './polygen.js';\n-import http from 'http';\n+import axios from 'axios';\n \n const app = express();\n const PORT = process.env.PORT || 3000;\n \n@@ -15,9 +15,9 @@\n app.post('/v1/ai-rodin', async (req, res) => {\n   const targetUrl = 'http://127.0.0.1/81'; // 替换为目标 URL\n \n   try {\n-    const response = await axios.post('http://目标服务器地址', req.body, {\n+    const response = await axios.post(targetUrl, req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671372385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n app.post('/v1/ai-rodin', async (req, res) => {\n   const targetUrl = 'http://127.0.0.1/81'; // 替换为目标 URL\n \n   try {\n-    const response = await axios.post(targetUrl, req.body, {\n+    const response = await axios.post('http://127.0.0.1/81', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671380539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n-  const targetUrl = 'http://127.0.0.1/81'; // 替换为目标 URL\n \n   try {\n     const response = await axios.post('http://127.0.0.1/81', req.body, {\n       headers: req.headers,\n"
                },
                {
                    "date": 1727671385841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.post('http://127.0.0.1/81', req.body, {\n+    const response = await axios.post('http://127.0.0.2/81', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671395779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.post('http://127.0.0.2/81', req.body, {\n+    const response = await axios.post('http://127.0.0.1/81', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671414838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.post('http://127.0.0.1/81', req.body, {\n+    const response = await axios.post('http://baidu.com', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671420892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.post('http://baidu.com', req.body, {\n+    const response = await axios.post('https://baidu.com', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671427019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.post('https://baidu.com', req.body, {\n+    const response = await axios.post('https://weibo.com', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671434863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.post('https://weibo.com', req.body, {\n+    const response = await axios.get('https://weibo.com', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671441225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('https://weibo.com', req.body, {\n+    const response = await axios.get('http://weibo.com', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671447951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://weibo.com', req.body, {\n+    const response = await axios.get('http://baidu.com', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671455924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://baidu.com', req.body, {\n+    const response = await axios.get('http://zhihu.com', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671549410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://zhihu.com', req.body, {\n+    const response = await axios.get('http://127.0.0.1:82', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671577167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://127.0.0.1:82', req.body, {\n+    const response = await axios.get('http://localhost:82', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671637543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://localhost:82', req.body, {\n+    const response = await axios.get('app', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671649605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('app', req.body, {\n+    const response = await axios.get('http://localhost:82', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671709242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://localhost:82', req.body, {\n+    const response = await axios.get('http://api:82', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671727091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://api:82', req.body, {\n+    const response = await axios.get('http://app:81', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671733531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://app:81', req.body, {\n+    const response = await axios.get('http://api:81', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671788766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://api:81', req.body, {\n+    const response = await axios.get('http://db:81', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671818255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://db:81', req.body, {\n+    const response = await axios.get('http://db', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671830124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://db', req.body, {\n+    const response = await axios.get('db', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671845013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('db', req.body, {\n+    const response = await axios.get('http://admin：8015', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671856072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://admin：8015', req.body, {\n+    const response = await axios.get('http://admin:8015', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671891166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import express from 'express';\n+// index.js  \n+import api from './api.js';\n+import polygen from './polygen.js';\n+import axios from 'axios';\n+\n+const app = express();\n+const PORT = process.env.PORT || 3000;\n+\n+// 设置根路由  \n+app.get('/', (req, res) => {\n+  const token = req.headers['authorization']?.split(' ')[1];\n+  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n+});\n+app.post('/v1/ai-rodin', async (req, res) => {\n+\n+  try {\n+    const response = await axios.get('http://127.0.0.1:8015', req.body, {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+app.get('/status', (req, res) => {\n+  api.status();\n+  res.send('Hello, status!');\n+});\n+app.get('/polygen', (req, res) => {\n+\n+  res.send(polygen.md5());\n+});\n+/*\n+Response: {\n+  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n+  submit_time: '2024-09-27T11:56:44.756Z',\n+  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n+  jobs: {\n+    uuids: [\n+      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n+      '69cb46db-0690-47c9-b98f-412b322285da',\n+      '179526dc-5d19-4742-b498-856696012ac0',\n+      'b4558a96-4512-4fb5-b68e-134077629083',\n+      '731ebfdd-a29e-4374-9f89-342650c24373'\n+    ],\n+    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n+  }\n+}\n+  */\n+\n+// 启动服务器  \n+app.listen(PORT, () => {\n+  console.log(`Server is running on http://localhost:${PORT}`);\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727671899932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://127.0.0.1:8015', req.body, {\n+    const response = await axios.get('http://localhost:8015', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n@@ -55,64 +55,5 @@\n \n // 启动服务器  \n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n-});\n-import express from 'express';\n-// index.js  \n-import api from './api.js';\n-import polygen from './polygen.js';\n-import axios from 'axios';\n-\n-const app = express();\n-const PORT = process.env.PORT || 3000;\n-\n-// 设置根路由  \n-app.get('/', (req, res) => {\n-  const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n-});\n-app.post('/v1/ai-rodin', async (req, res) => {\n-\n-  try {\n-    const response = await axios.get('http://admin:8015', req.body, {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-app.get('/status', (req, res) => {\n-  api.status();\n-  res.send('Hello, status!');\n-});\n-app.get('/polygen', (req, res) => {\n-\n-  res.send(polygen.md5());\n-});\n-/*\n-Response: {\n-  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n-  submit_time: '2024-09-27T11:56:44.756Z',\n-  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n-  jobs: {\n-    uuids: [\n-      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n-      '69cb46db-0690-47c9-b98f-412b322285da',\n-      '179526dc-5d19-4742-b498-856696012ac0',\n-      'b4558a96-4512-4fb5-b68e-134077629083',\n-      '731ebfdd-a29e-4374-9f89-342650c24373'\n-    ],\n-    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n-  }\n-}\n-  */\n-\n-// 启动服务器  \n-app.listen(PORT, () => {\n-  console.log(`Server is running on http://localhost:${PORT}`);\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727671905446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://localhost:8015', req.body, {\n+    const response = await axios.get('http://admin:8015', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671941992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://admin:8015', req.body, {\n+    const response = await axios.get('http://api:80', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671961272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://api:80', req.body, {\n+    const response = await axios.get('http://app:80', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671969407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://app:80', req.body, {\n+    const response = await axios.get('http://api:80', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727671981218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n \n   try {\n-    const response = await axios.get('http://api:80', req.body, {\n+    const response = await axios.get('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727674299543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n-\n+  res.send(req.headers);\n   try {\n     const response = await axios.get('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n"
                },
                {
                    "date": 1727674310121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n-  res.send(req.headers);\n+\n   try {\n     const response = await axios.get('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n"
                },
                {
                    "date": 1727674318466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n-\n+  res.send(req.headers);\n   try {\n     const response = await axios.get('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n"
                },
                {
                    "date": 1727674328996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n-  res.send(req.headers);\n+  // res.send(req.headers);\n   try {\n     const response = await axios.get('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n"
                },
                {
                    "date": 1727674368416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,12 @@\n app.post('/v1/ai-rodin', async (req, res) => {\n   // res.send(req.headers);\n   try {\n     const response = await axios.get('http://api:80/v1/ai-rodin', req.body, {\n-      headers: req.headers,\n+      headers: {\n+        ...req.headers, // 传递原始请求的所有头部\n+        'Authorization': 'Bearer your_token', // 添加有效的令牌\n+      },\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n"
                },
                {
                    "date": 1727674389154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   try {\n     const response = await axios.get('http://api:80/v1/ai-rodin', req.body, {\n       headers: {\n         ...req.headers, // 传递原始请求的所有头部\n-        'Authorization': 'Bearer your_token', // 添加有效的令牌\n+        'Authorization': 'Bearer ' + req.headers['authorization']?.split(' ')[1], // 添加有效的令牌\n       },\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727674399578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   try {\n     const response = await axios.get('http://api:80/v1/ai-rodin', req.body, {\n       headers: {\n         ...req.headers, // 传递原始请求的所有头部\n-        'Authorization': 'Bearer ' + req.headers['authorization']?.split(' ')[1], // 添加有效的令牌\n+        'Authorization': req.headers['authorization'], // 添加有效的令牌\n       },\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727674460801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n   // res.send(req.headers);\n   try {\n-    const response = await axios.get('http://api:80/v1/ai-rodin', req.body, {\n+    const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n       headers: {\n         ...req.headers, // 传递原始请求的所有头部\n         'Authorization': req.headers['authorization'], // 添加有效的令牌\n       },\n"
                },
                {
                    "date": 1727674479663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,9 @@\n app.post('/v1/ai-rodin', async (req, res) => {\n   // res.send(req.headers);\n   try {\n     const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n-      headers: {\n-        ...req.headers, // 传递原始请求的所有头部\n-        'Authorization': req.headers['authorization'], // 添加有效的令牌\n-      },\n+      headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n"
                },
                {
                    "date": 1727674718018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+import express from 'express';\n+// index.js  \n+import api from './api.js';\n+import polygen from './polygen.js';\n+import axios from 'axios';\n+\n+const app = express();\n+const PORT = process.env.PORT || 3000;\n+\n+// 设置根路由  \n+app.get('/', (req, res) => {\n+  const token = req.headers['authorization']?.split(' ')[1];\n+  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n+});\n+app.post('/v1/ai-rodin', async (req, res) => {\n+  try {\n+    const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+app.get('/status', (req, res) => {\n+  api.status();\n+  res.send('Hello, status!');\n+});\n+app.get('/polygen', (req, res) => {\n+\n+  res.send(polygen.md5());\n+});\n+/*\n+Response: {\n+  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n+  submit_time: '2024-09-27T11:56:44.756Z',\n+  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n+  jobs: {\n+    uuids: [\n+      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n+      '69cb46db-0690-47c9-b98f-412b322285da',\n+      '179526dc-5d19-4742-b498-856696012ac0',\n+      'b4558a96-4512-4fb5-b68e-134077629083',\n+      '731ebfdd-a29e-4374-9f89-342650c24373'\n+    ],\n+    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n+  }\n+}\n+  */\n+\n+// 启动服务器  \n+app.listen(PORT, () => {\n+  console.log(`Server is running on http://localhost:${PORT}`);\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727674729182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,54 +25,10 @@\n       details: error.response ? error.response.data : error.message,\n     });\n   }\n });\n-app.get('/status', (req, res) => {\n-  api.status();\n-  res.send('Hello, status!');\n-});\n-app.get('/polygen', (req, res) => {\n \n-  res.send(polygen.md5());\n-});\n-/*\n-Response: {\n-  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n-  submit_time: '2024-09-27T11:56:44.756Z',\n-  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n-  jobs: {\n-    uuids: [\n-      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n-      '69cb46db-0690-47c9-b98f-412b322285da',\n-      '179526dc-5d19-4742-b498-856696012ac0',\n-      'b4558a96-4512-4fb5-b68e-134077629083',\n-      '731ebfdd-a29e-4374-9f89-342650c24373'\n-    ],\n-    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n-  }\n-}\n-  */\n-\n-// 启动服务器  \n-app.listen(PORT, () => {\n-  console.log(`Server is running on http://localhost:${PORT}`);\n-});\n-import express from 'express';\n-// index.js  \n-import api from './api.js';\n-import polygen from './polygen.js';\n-import axios from 'axios';\n-\n-const app = express();\n-const PORT = process.env.PORT || 3000;\n-\n-// 设置根路由  \n-app.get('/', (req, res) => {\n-  const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n-});\n-app.post('/v1/ai-rodin', async (req, res) => {\n-  // res.send(req.headers);\n+app.get('/v1/ai-rodin', async (req, res) => {\n   try {\n     const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n"
                },
                {
                    "date": 1727674771446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n });\n \n app.get('/v1/ai-rodin', async (req, res) => {\n   try {\n-    const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n+    const response = await axios.get('http://api:80/v1/ai-rodin', {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727677087518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n });\n \n app.get('/v1/ai-rodin', async (req, res) => {\n   try {\n-    const response = await axios.get('http://api:80/v1/ai-rodin', {\n+    const response = await axios.get('http://api/v1/ai-rodin', {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727677103954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n });\n \n app.get('/v1/ai-rodin', async (req, res) => {\n   try {\n-    const response = await axios.get('http://api/v1/ai-rodin', {\n+    const response = await axios.get('https://api/v1/ai-rodin', {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                },
                {
                    "date": 1727677307584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,74 @@\n+import express from 'express';\n+// index.js  \n+import api from './api.js';\n+import polygen from './polygen.js';\n+import axios from 'axios';\n+\n+const app = express();\n+const PORT = process.env.PORT || 3000;\n+\n+// 设置根路由  \n+app.get('/', (req, res) => {\n+  const token = req.headers['authorization']?.split(' ')[1];\n+  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n+});\n+app.post('/v1/ai-rodin', async (req, res) => {\n+  try {\n+    const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n+      headers: req.headers,\n+    });\n+\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+\n+app.get('/v1/ai-rodin', async (req, res) => {\n+  try {\n+    const response = await axios.get('https://api/v1/ai-rodin', {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+app.get('/status', (req, res) => {\n+  api.status();\n+  res.send('Hello, status!');\n+});\n+app.get('/polygen', (req, res) => {\n+\n+  res.send(polygen.md5());\n+});\n+/*\n+Response: {\n+  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n+  submit_time: '2024-09-27T11:56:44.756Z',\n+  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n+  jobs: {\n+    uuids: [\n+      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n+      '69cb46db-0690-47c9-b98f-412b322285da',\n+      '179526dc-5d19-4742-b498-856696012ac0',\n+      'b4558a96-4512-4fb5-b68e-134077629083',\n+      '731ebfdd-a29e-4374-9f89-342650c24373'\n+    ],\n+    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n+  }\n+}\n+  */\n+\n+// 启动服务器  \n+app.listen(PORT, () => {\n+  console.log(`Server is running on http://localhost:${PORT}`);\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727677324541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,11 @@\n   try {\n     const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n-\n+    if (response.status === 200) {\n+      console.log(response.data)\n+    }\n     res.status(response.status).send(response.data);\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n@@ -70,78 +72,5 @@\n \n // 启动服务器  \n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n-});\n-import express from 'express';\n-// index.js  \n-import api from './api.js';\n-import polygen from './polygen.js';\n-import axios from 'axios';\n-\n-const app = express();\n-const PORT = process.env.PORT || 3000;\n-\n-// 设置根路由  \n-app.get('/', (req, res) => {\n-  const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n-});\n-app.post('/v1/ai-rodin', async (req, res) => {\n-  try {\n-    const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-\n-app.get('/v1/ai-rodin', async (req, res) => {\n-  try {\n-    const response = await axios.get('https://api/v1/ai-rodin', {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-app.get('/status', (req, res) => {\n-  api.status();\n-  res.send('Hello, status!');\n-});\n-app.get('/polygen', (req, res) => {\n-\n-  res.send(polygen.md5());\n-});\n-/*\n-Response: {\n-  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n-  submit_time: '2024-09-27T11:56:44.756Z',\n-  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n-  jobs: {\n-    uuids: [\n-      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n-      '69cb46db-0690-47c9-b98f-412b322285da',\n-      '179526dc-5d19-4742-b498-856696012ac0',\n-      'b4558a96-4512-4fb5-b68e-134077629083',\n-      '731ebfdd-a29e-4374-9f89-342650c24373'\n-    ],\n-    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n-  }\n-}\n-  */\n-\n-// 启动服务器  \n-app.listen(PORT, () => {\n-  console.log(`Server is running on http://localhost:${PORT}`);\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727678842458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,10 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n+  res.send('Hello, AI Rodin!');\n+  return;\n   try {\n     const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n"
                },
                {
                    "date": 1727678981517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n // index.js  \n import api from './api.js';\n import polygen from './polygen.js';\n import axios from 'axios';\n-\n+import cors from 'cors';\n const app = express();\n const PORT = process.env.PORT || 3000;\n \n // 设置根路由  \n"
                },
                {
                    "date": 1727679013589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,16 @@\n import axios from 'axios';\n import cors from 'cors';\n const app = express();\n const PORT = process.env.PORT || 3000;\n-\n+app.use(cors());\n // 设置根路由  \n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.post('/v1/ai-rodin', async (req, res) => {\n-  res.send('Hello, AI Rodin!');\n-  return;\n+\n   try {\n     const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n"
                },
                {
                    "date": 1727679070708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+import express from 'express';\n+// index.js  \n+import api from './api.js';\n+import polygen from './polygen.js';\n+import axios from 'axios';\n+import cors from 'cors';\n+const app = express();\n+const PORT = process.env.PORT || 3000;\n+app.use(cors());\n+// 设置根路由  \n+app.get('/', (req, res) => {\n+  const token = req.headers['authorization']?.split(' ')[1];\n+  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n+});\n+app.post('/v1/ai-rodin', async (req, res) => {\n+\n+  try {\n+    const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n+      headers: req.headers,\n+    });\n+    if (response.status === 200) {\n+      console.log(response.data)\n+    }\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+\n+app.get('/v1/ai-rodin', async (req, res) => {\n+  try {\n+    const response = await axios.get('https://api/v1/ai-rodin', {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+app.get('/status', (req, res) => {\n+  api.status();\n+  res.send('Hello, status!');\n+});\n+app.get('/polygen', (req, res) => {\n+\n+  res.send(polygen.md5());\n+});\n+/*\n+Response: {\n+  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n+  submit_time: '2024-09-27T11:56:44.756Z',\n+  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n+  jobs: {\n+    uuids: [\n+      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n+      '69cb46db-0690-47c9-b98f-412b322285da',\n+      '179526dc-5d19-4742-b498-856696012ac0',\n+      'b4558a96-4512-4fb5-b68e-134077629083',\n+      '731ebfdd-a29e-4374-9f89-342650c24373'\n+    ],\n+    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n+  }\n+}\n+  */\n+\n+// 启动服务器  \n+app.listen(PORT, () => {\n+  console.log(`Server is running on http://localhost:${PORT}`);\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727679251343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,87 +11,10 @@\n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n-app.post('/v1/ai-rodin', async (req, res) => {\n-\n-  try {\n-    const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n-      headers: req.headers,\n-    });\n-    if (response.status === 200) {\n-      console.log(response.data)\n-    }\n-    res.status(response.status).send(response.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-\n app.get('/v1/ai-rodin', async (req, res) => {\n-  try {\n-    const response = await axios.get('https://api/v1/ai-rodin', {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-app.get('/status', (req, res) => {\n-  api.status();\n-  res.send('Hello, status!');\n-});\n-app.get('/polygen', (req, res) => {\n \n-  res.send(polygen.md5());\n-});\n-/*\n-Response: {\n-  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n-  submit_time: '2024-09-27T11:56:44.756Z',\n-  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n-  jobs: {\n-    uuids: [\n-      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n-      '69cb46db-0690-47c9-b98f-412b322285da',\n-      '179526dc-5d19-4742-b498-856696012ac0',\n-      'b4558a96-4512-4fb5-b68e-134077629083',\n-      '731ebfdd-a29e-4374-9f89-342650c24373'\n-    ],\n-    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n-  }\n-}\n-  */\n-\n-// 启动服务器  \n-app.listen(PORT, () => {\n-  console.log(`Server is running on http://localhost:${PORT}`);\n-});\n-import express from 'express';\n-// index.js  \n-import api from './api.js';\n-import polygen from './polygen.js';\n-import axios from 'axios';\n-import cors from 'cors';\n-const app = express();\n-const PORT = process.env.PORT || 3000;\n-app.use(cors());\n-// 设置根路由  \n-app.get('/', (req, res) => {\n-  const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n-});\n-app.post('/v1/ai-rodin', async (req, res) => {\n-\n   try {\n     const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n       headers: req.headers,\n     });\n"
                },
                {
                    "date": 1727679753047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,13 @@\n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n-app.get('/v1/ai-rodin', async (req, res) => {\n+app.get('/prompt', async (req, res) => {\n+  const { prompt } = req.query\n \n   try {\n-    const response = await axios.post('http://api:80/v1/ai-rodin', req.body, {\n+    const response = await axios.post('http://api:80/v1/ai-rodin', { prompt }, {\n       headers: req.headers,\n     });\n     if (response.status === 200) {\n       console.log(response.data)\n"
                },
                {
                    "date": 1727679917112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,12 @@\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.get('/prompt', async (req, res) => {\n   const { prompt } = req.query\n+  if (!prompt) {\n+    res.status(400).send('prompt is required');\n+    return;\n+  }\n \n   try {\n     const response = await axios.post('http://api:80/v1/ai-rodin', { prompt }, {\n       headers: req.headers,\n"
                },
                {
                    "date": 1727679943530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,12 @@\n   if (!prompt) {\n     res.status(400).send('prompt is required');\n     return;\n   }\n-\n+  if (prompt.length < 4) {\n+    res.status(400).send('prompt is too short');\n+    return\n+  }\n   try {\n     const response = await axios.post('http://api:80/v1/ai-rodin', { prompt }, {\n       headers: req.headers,\n     });\n"
                },
                {
                    "date": 1727680018053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+import express from 'express';\n+// index.js  \n+import api from './api.js';\n+import polygen from './polygen.js';\n+import axios from 'axios';\n+import cors from 'cors';\n+const app = express();\n+const PORT = process.env.PORT || 3000;\n+app.use(cors());\n+// 设置根路由  \n+app.get('/', (req, res) => {\n+  const token = req.headers['authorization']?.split(' ')[1];\n+  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n+});\n+app.get('/prompt', async (req, res) => {\n+  const { prompt } = req.query\n+  if (!prompt) {\n+    res.status(400).send('prompt is required');\n+    return;\n+  }\n+  if (prompt.length < 4) {\n+    res.status(400).send('prompt is too short');\n+    return\n+  }\n+  try {\n+    const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n+      headers: req.headers,\n+    });\n+    if (response.status === 200) {\n+      console.log(response.data)\n+    }\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+\n+app.get('/v1/ai-rodin', async (req, res) => {\n+  try {\n+    const response = await axios.get('https://api/v1/ai-rodin', {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+app.get('/status', (req, res) => {\n+  api.status();\n+  res.send('Hello, status!');\n+});\n+app.get('/polygen', (req, res) => {\n+\n+  res.send(polygen.md5());\n+});\n+/*\n+Response: {\n+  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n+  submit_time: '2024-09-27T11:56:44.756Z',\n+  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n+  jobs: {\n+    uuids: [\n+      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n+      '69cb46db-0690-47c9-b98f-412b322285da',\n+      '179526dc-5d19-4742-b498-856696012ac0',\n+      'b4558a96-4512-4fb5-b68e-134077629083',\n+      '731ebfdd-a29e-4374-9f89-342650c24373'\n+    ],\n+    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n+  }\n+}\n+  */\n+\n+// 启动服务器  \n+app.listen(PORT, () => {\n+  console.log(`Server is running on http://localhost:${PORT}`);\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727680062308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n     if (response.status === 200) {\n       console.log(response.data)\n     }\n     res.status(response.status).send(response.data);\n+    api.prompt(prompt);\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n       message: 'Internal Server Error',\n@@ -81,90 +82,5 @@\n \n // 启动服务器  \n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n-});\n-import express from 'express';\n-// index.js  \n-import api from './api.js';\n-import polygen from './polygen.js';\n-import axios from 'axios';\n-import cors from 'cors';\n-const app = express();\n-const PORT = process.env.PORT || 3000;\n-app.use(cors());\n-// 设置根路由  \n-app.get('/', (req, res) => {\n-  const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n-});\n-app.get('/prompt', async (req, res) => {\n-  const { prompt } = req.query\n-  if (!prompt) {\n-    res.status(400).send('prompt is required');\n-    return;\n-  }\n-  if (prompt.length < 4) {\n-    res.status(400).send('prompt is too short');\n-    return\n-  }\n-  try {\n-    const response = await axios.post('http://api:80/v1/ai-rodin', { prompt }, {\n-      headers: req.headers,\n-    });\n-    if (response.status === 200) {\n-      console.log(response.data)\n-    }\n-    res.status(response.status).send(response.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-\n-app.get('/v1/ai-rodin', async (req, res) => {\n-  try {\n-    const response = await axios.get('https://api/v1/ai-rodin', {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-app.get('/status', (req, res) => {\n-  api.status();\n-  res.send('Hello, status!');\n-});\n-app.get('/polygen', (req, res) => {\n-\n-  res.send(polygen.md5());\n-});\n-/*\n-Response: {\n-  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n-  submit_time: '2024-09-27T11:56:44.756Z',\n-  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n-  jobs: {\n-    uuids: [\n-      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n-      '69cb46db-0690-47c9-b98f-412b322285da',\n-      '179526dc-5d19-4742-b498-856696012ac0',\n-      'b4558a96-4512-4fb5-b68e-134077629083',\n-      '731ebfdd-a29e-4374-9f89-342650c24373'\n-    ],\n-    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n-  }\n-}\n-  */\n-\n-// 启动服务器  \n-app.listen(PORT, () => {\n-  console.log(`Server is running on http://localhost:${PORT}`);\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727680107554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,12 +26,14 @@\n     const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n       headers: req.headers,\n     });\n     if (response.status === 200) {\n+\n       console.log(response.data)\n+\n+      res.status(response.status).send(response.data);\n+      api.prompt(prompt);\n     }\n-    res.status(response.status).send(response.data);\n-    api.prompt(prompt);\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n       message: 'Internal Server Error',\n"
                },
                {
                    "date": 1727680512851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import express from 'express';\n+// index.js  \n+import api from './api.js';\n+import polygen from './polygen.js';\n+import axios from 'axios';\n+import cors from 'cors';\n+const app = express();\n+const PORT = process.env.PORT || 3000;\n+app.use(cors());\n+// 设置根路由  \n+app.get('/', (req, res) => {\n+  const token = req.headers['authorization']?.split(' ')[1];\n+  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n+});\n+app.get('/prompt', async (req, res) => {\n+  const { prompt } = req.query\n+  if (!prompt) {\n+    res.status(400).send('prompt is required');\n+    return;\n+  }\n+  if (prompt.length < 4) {\n+    res.status(400).send('prompt is too short');\n+    return\n+  }\n+  try {\n+    const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n+      headers: req.headers,\n+    });\n+    if (response.status === 200) {\n+\n+      console.log(response.data)\n+\n+      res.status(response.status).send(response.data);\n+      api.prompt(prompt);\n+    }\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+\n+app.get('/v1/ai-rodin', async (req, res) => {\n+  try {\n+    const response = await axios.get('https://api/v1/ai-rodin', {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+app.get('/status', (req, res) => {\n+  api.status();\n+  res.send('Hello, status!');\n+});\n+app.get('/polygen', (req, res) => {\n+\n+  res.send(polygen.md5());\n+});\n+/*\n+Response: {\n+  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n+  submit_time: '2024-09-27T11:56:44.756Z',\n+  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n+  jobs: {\n+    uuids: [\n+      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n+      '69cb46db-0690-47c9-b98f-412b322285da',\n+      '179526dc-5d19-4742-b498-856696012ac0',\n+      'b4558a96-4512-4fb5-b68e-134077629083',\n+      '731ebfdd-a29e-4374-9f89-342650c24373'\n+    ],\n+    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n+  }\n+}\n+  */\n+\n+// 启动服务器  \n+app.listen(PORT, () => {\n+  console.log(`Server is running on http://localhost:${PORT}`);\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727681089428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     if (response.status === 200) {\n \n       console.log(response.data)\n \n-      res.status(response.status).send(response.data);\n+      res.status(response.status).send({ api: response.data });\n       api.prompt(prompt);\n     }\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n@@ -84,93 +84,5 @@\n \n // 启动服务器  \n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n-});\n-import express from 'express';\n-// index.js  \n-import api from './api.js';\n-import polygen from './polygen.js';\n-import axios from 'axios';\n-import cors from 'cors';\n-const app = express();\n-const PORT = process.env.PORT || 3000;\n-app.use(cors());\n-// 设置根路由  \n-app.get('/', (req, res) => {\n-  const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n-});\n-app.get('/prompt', async (req, res) => {\n-  const { prompt } = req.query\n-  if (!prompt) {\n-    res.status(400).send('prompt is required');\n-    return;\n-  }\n-  if (prompt.length < 4) {\n-    res.status(400).send('prompt is too short');\n-    return\n-  }\n-  try {\n-    const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n-      headers: req.headers,\n-    });\n-    if (response.status === 200) {\n-\n-      console.log(response.data)\n-\n-      res.status(response.status).send(response.data);\n-      api.prompt(prompt);\n-    }\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-\n-app.get('/v1/ai-rodin', async (req, res) => {\n-  try {\n-    const response = await axios.get('https://api/v1/ai-rodin', {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-app.get('/status', (req, res) => {\n-  api.status();\n-  res.send('Hello, status!');\n-});\n-app.get('/polygen', (req, res) => {\n-\n-  res.send(polygen.md5());\n-});\n-/*\n-Response: {\n-  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n-  submit_time: '2024-09-27T11:56:44.756Z',\n-  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n-  jobs: {\n-    uuids: [\n-      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n-      '69cb46db-0690-47c9-b98f-412b322285da',\n-      '179526dc-5d19-4742-b498-856696012ac0',\n-      'b4558a96-4512-4fb5-b68e-134077629083',\n-      '731ebfdd-a29e-4374-9f89-342650c24373'\n-    ],\n-    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n-  }\n-}\n-  */\n-\n-// 启动服务器  \n-app.listen(PORT, () => {\n-  console.log(`Server is running on http://localhost:${PORT}`);\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727681098011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,12 @@\n     if (response.status === 200) {\n \n       console.log(response.data)\n \n-      res.status(response.status).send({ api: response.data });\n+      res.status(response.status).send({\n+        api: response.data,\n+        ai: response.data\n+      });\n       api.prompt(prompt);\n     }\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n"
                },
                {
                    "date": 1727681113781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n \n       console.log(response.data)\n \n       res.status(response.status).send({\n-        api: response.data,\n+        sql: response.data,\n         ai: response.data\n       });\n       api.prompt(prompt);\n     }\n"
                },
                {
                    "date": 1727681137512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,11 @@\n     });\n     if (response.status === 200) {\n \n       console.log(response.data)\n-\n+      await api.prompt(prompt);\n       res.status(response.status).send({\n-        sql: response.data,\n+        db: response.data,\n         ai: response.data\n       });\n       api.prompt(prompt);\n     }\n"
                },
                {
                    "date": 1727681154170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,14 +28,13 @@\n     });\n     if (response.status === 200) {\n \n       console.log(response.data)\n-      await api.prompt(prompt);\n+      const response2 = await api.prompt(prompt);\n       res.status(response.status).send({\n         db: response.data,\n         ai: response.data\n       });\n-      api.prompt(prompt);\n     }\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n"
                },
                {
                    "date": 1727681159352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n       console.log(response.data)\n       const response2 = await api.prompt(prompt);\n       res.status(response.status).send({\n         db: response.data,\n-        ai: response.data\n+        ai: response2.data\n       });\n     }\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n"
                },
                {
                    "date": 1727681323480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,12 +28,13 @@\n     });\n     if (response.status === 200) {\n \n       console.log(response.data)\n-      const response2 = await api.prompt(prompt);\n+      // const response2 = await api.prompt(prompt);\n+\n       res.status(response.status).send({\n         db: response.data,\n-        ai: response2.data\n+        ai: response.data\n       });\n     }\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n"
                },
                {
                    "date": 1727681341303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n         db: response.data,\n         ai: response.data\n       });\n     }\n+    res.status(response.status).send(response.data);\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n       message: 'Internal Server Error',\n"
                },
                {
                    "date": 1727681356246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n         db: response.data,\n         ai: response.data\n       });\n     }\n-    res.status(response.status).send(response.data);\n+    res.status(response.status).send(response.status);\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n       message: 'Internal Server Error',\n"
                },
                {
                    "date": 1727681378825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,14 +30,15 @@\n \n       console.log(response.data)\n       // const response2 = await api.prompt(prompt);\n \n-      res.status(response.status).send({\n-        db: response.data,\n-        ai: response.data\n-      });\n+\n     }\n-    res.status(response.status).send(response.status);\n+    const response2 = await api.prompt(prompt);\n+    res.status(response.status).send({\n+      db: response.data,\n+      ai: response.data\n+    });\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n       message: 'Internal Server Error',\n"
                },
                {
                    "date": 1727681393364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     }\n     const response2 = await api.prompt(prompt);\n     res.status(response.status).send({\n       db: response.data,\n-      ai: response.data\n+      ai: response2.data\n     });\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n"
                },
                {
                    "date": 1727681400978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,12 +32,12 @@\n       // const response2 = await api.prompt(prompt);\n \n \n     }\n-    const response2 = await api.prompt(prompt);\n+    //const response2 = await api.prompt(prompt);\n     res.status(response.status).send({\n       db: response.data,\n-      ai: response2.data\n+      //  ai: response2.data\n     });\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n"
                },
                {
                    "date": 1727681410377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n       // const response2 = await api.prompt(prompt);\n \n \n     }\n-    //const response2 = await api.prompt(prompt);\n+    const response2 = await api.prompt(prompt);\n     res.status(response.status).send({\n       db: response.data,\n       //  ai: response2.data\n     });\n"
                },
                {
                    "date": 1727681417846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     }\n     const response2 = await api.prompt(prompt);\n     res.status(response.status).send({\n       db: response.data,\n-      //  ai: response2.data\n+      ai: response2.data\n     });\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n"
                },
                {
                    "date": 1727682577020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,20 +25,17 @@\n   try {\n     const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n       headers: req.headers,\n     });\n-    if (response.status === 200) {\n-\n-      console.log(response.data)\n-      // const response2 = await api.prompt(prompt);\n-\n-\n-    }\n     const response2 = await api.prompt(prompt);\n     res.status(response.status).send({\n       db: response.data,\n       ai: response2.data\n     });\n+\n+    const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { prompt }, {\n+      headers: req.headers,\n+    });\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n       message: 'Internal Server Error',\n"
                },
                {
                    "date": 1727682609810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n       db: response.data,\n       ai: response2.data\n     });\n \n-    const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { prompt }, {\n+    const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n       headers: req.headers,\n     });\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n"
                },
                {
                    "date": 1727682638249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,9 @@\n \n     const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n       headers: req.headers,\n     });\n+    res.status(response.status).send(response3.data);\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n       message: 'Internal Server Error',\n"
                },
                {
                    "date": 1727682685271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,10 @@\n     const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n       headers: req.headers,\n     });\n     const response2 = await api.prompt(prompt);\n-    res.status(response.status).send({\n-      db: response.data,\n-      ai: response2.data\n-    });\n \n+\n     const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response3.data);\n"
                },
                {
                    "date": 1727682765016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,8 @@\n     const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n       headers: req.headers,\n     });\n     const response2 = await api.prompt(prompt);\n-\n-\n     const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response3.data);\n"
                },
                {
                    "date": 1727683463954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,20 @@\n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n+app.get('/status', async (req, res) => {\n+  try {\n+    const response = await api.status();\n+    res.send(response);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+}\n app.get('/prompt', async (req, res) => {\n   const { prompt } = req.query\n   if (!prompt) {\n     res.status(400).send('prompt is required');\n"
                },
                {
                    "date": 1727683497149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,36 +22,36 @@\n       message: 'Internal Server Error',\n       details: error.response ? error.response.data : error.message,\n     });\n   }\n-}\n-app.get('/prompt', async (req, res) => {\n-  const { prompt } = req.query\n-  if (!prompt) {\n-    res.status(400).send('prompt is required');\n-    return;\n-  }\n-  if (prompt.length < 4) {\n-    res.status(400).send('prompt is too short');\n-    return\n-  }\n-  try {\n-    const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n-      headers: req.headers,\n-    });\n-    const response2 = await api.prompt(prompt);\n-    const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response3.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n+},\n+  app.get('/prompt', async (req, res) => {\n+    const { prompt } = req.query\n+    if (!prompt) {\n+      res.status(400).send('prompt is required');\n+      return;\n+    }\n+    if (prompt.length < 4) {\n+      res.status(400).send('prompt is too short');\n+      return\n+    }\n+    try {\n+      const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n+        headers: req.headers,\n+      });\n+      const response2 = await api.prompt(prompt);\n+      const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n+        headers: req.headers,\n+      });\n+      res.status(response.status).send(response3.data);\n+    } catch (error) {\n+      console.error('Error details:', error); // 打印完整的错误信息\n+      res.status(error.response ? error.response.status : 500).send({\n+        message: 'Internal Server Error',\n+        details: error.response ? error.response.data : error.message,\n+      });\n+    }\n+  });\n \n app.get('/v1/ai-rodin', async (req, res) => {\n   try {\n     const response = await axios.get('https://api/v1/ai-rodin', {\n"
                },
                {
                    "date": 1727683507864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,36 +22,36 @@\n       message: 'Internal Server Error',\n       details: error.response ? error.response.data : error.message,\n     });\n   }\n-},\n-  app.get('/prompt', async (req, res) => {\n-    const { prompt } = req.query\n-    if (!prompt) {\n-      res.status(400).send('prompt is required');\n-      return;\n-    }\n-    if (prompt.length < 4) {\n-      res.status(400).send('prompt is too short');\n-      return\n-    }\n-    try {\n-      const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n-        headers: req.headers,\n-      });\n-      const response2 = await api.prompt(prompt);\n-      const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n-        headers: req.headers,\n-      });\n-      res.status(response.status).send(response3.data);\n-    } catch (error) {\n-      console.error('Error details:', error); // 打印完整的错误信息\n-      res.status(error.response ? error.response.status : 500).send({\n-        message: 'Internal Server Error',\n-        details: error.response ? error.response.data : error.message,\n-      });\n-    }\n-  });\n+});\n+app.get('/prompt', async (req, res) => {\n+  const { prompt } = req.query\n+  if (!prompt) {\n+    res.status(400).send('prompt is required');\n+    return;\n+  }\n+  if (prompt.length < 4) {\n+    res.status(400).send('prompt is too short');\n+    return\n+  }\n+  try {\n+    const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n+      headers: req.headers,\n+    });\n+    const response2 = await api.prompt(prompt);\n+    const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response3.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n \n app.get('/v1/ai-rodin', async (req, res) => {\n   try {\n     const response = await axios.get('https://api/v1/ai-rodin', {\n"
                },
                {
                    "date": 1727683683951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,10 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.get('/status', async (req, res) => {\n+  res.send('Hello, status!');\n+  return;\n   try {\n     const response = await api.status();\n     res.send(response);\n   } catch (error) {\n"
                },
                {
                    "date": 1727683750864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,14 @@\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n app.get('/status', async (req, res) => {\n+\n+  const { id } = req.query\n+  if (!id) {\n+    res.status(400).send('id is required');\n+    return;\n+  }\n   res.send('Hello, status!');\n   return;\n   try {\n     const response = await api.status();\n"
                },
                {
                    "date": 1727683801026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,11 @@\n   if (!id) {\n     res.status(400).send('id is required');\n     return;\n   }\n-  res.send('Hello, status!');\n+  const response = await axios.get('http://api/v1/ai-rodin/' + id, { prompt }, {\n+    headers: req.headers,\n+  });\n   return;\n   try {\n     const response = await api.status();\n     res.send(response);\n"
                },
                {
                    "date": 1727683824006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,20 @@\n   if (!id) {\n     res.status(400).send('id is required');\n     return;\n   }\n-  const response = await axios.get('http://api/v1/ai-rodin/' + id, { prompt }, {\n-    headers: req.headers,\n-  });\n+  try {\n+    const response = await axios.get('http://api/v1/ai-rodin/' + id, {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response3.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n   return;\n   try {\n     const response = await api.status();\n     res.send(response);\n"
                },
                {
                    "date": 1727683885085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,117 @@\n+import express from 'express';\n+// index.js  \n+import api from './api.js';\n+import polygen from './polygen.js';\n+import axios from 'axios';\n+import cors from 'cors';\n+const app = express();\n+const PORT = process.env.PORT || 3000;\n+app.use(cors());\n+// 设置根路由  \n+app.get('/', (req, res) => {\n+  const token = req.headers['authorization']?.split(' ')[1];\n+  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n+});\n+app.get('/status', async (req, res) => {\n+\n+  const { id } = req.query\n+  if (!id) {\n+    res.status(400).send('id is required');\n+    return;\n+  }\n+  try {\n+    const response = await axios.get('http://api/v1/ai-rodin/' + id, {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+  return;\n+  try {\n+    const response = await api.status();\n+    res.send(response);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+app.get('/prompt', async (req, res) => {\n+  const { prompt } = req.query\n+  if (!prompt) {\n+    res.status(400).send('prompt is required');\n+    return;\n+  }\n+  if (prompt.length < 4) {\n+    res.status(400).send('prompt is too short');\n+    return\n+  }\n+  try {\n+    const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n+      headers: req.headers,\n+    });\n+    const response2 = await api.prompt(prompt);\n+    const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response3.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+\n+app.get('/v1/ai-rodin', async (req, res) => {\n+  try {\n+    const response = await axios.get('https://api/v1/ai-rodin', {\n+      headers: req.headers,\n+    });\n+    res.status(response.status).send(response.data);\n+  } catch (error) {\n+    console.error('Error details:', error); // 打印完整的错误信息\n+    res.status(error.response ? error.response.status : 500).send({\n+      message: 'Internal Server Error',\n+      details: error.response ? error.response.data : error.message,\n+    });\n+  }\n+});\n+app.get('/status', (req, res) => {\n+  api.status();\n+  res.send('Hello, status!');\n+});\n+app.get('/polygen', (req, res) => {\n+\n+  res.send(polygen.md5());\n+});\n+/*\n+Response: {\n+  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n+  submit_time: '2024-09-27T11:56:44.756Z',\n+  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n+  jobs: {\n+    uuids: [\n+      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n+      '69cb46db-0690-47c9-b98f-412b322285da',\n+      '179526dc-5d19-4742-b498-856696012ac0',\n+      'b4558a96-4512-4fb5-b68e-134077629083',\n+      '731ebfdd-a29e-4374-9f89-342650c24373'\n+    ],\n+    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n+  }\n+}\n+  */\n+\n+// 启动服务器  \n+app.listen(PORT, () => {\n+  console.log(`Server is running on http://localhost:${PORT}`);\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727684019942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n-app.get('/status', async (req, res) => {\n+app.post('/status', async (req, res) => {\n \n   const { id } = req.query\n   if (!id) {\n     res.status(400).send('id is required');\n@@ -113,122 +113,5 @@\n \n // 启动服务器  \n app.listen(PORT, () => {\n   console.log(`Server is running on http://localhost:${PORT}`);\n-});\n-import express from 'express';\n-// index.js  \n-import api from './api.js';\n-import polygen from './polygen.js';\n-import axios from 'axios';\n-import cors from 'cors';\n-const app = express();\n-const PORT = process.env.PORT || 3000;\n-app.use(cors());\n-// 设置根路由  \n-app.get('/', (req, res) => {\n-  const token = req.headers['authorization']?.split(' ')[1];\n-  res.send('Hel1222是山山水水 lo,2 Express!' + token);\n-});\n-app.get('/status', async (req, res) => {\n-\n-  const { id } = req.query\n-  if (!id) {\n-    res.status(400).send('id is required');\n-    return;\n-  }\n-  try {\n-    const response = await axios.get('http://api/v1/ai-rodin/' + id, {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response3.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-  return;\n-  try {\n-    const response = await api.status();\n-    res.send(response);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-app.get('/prompt', async (req, res) => {\n-  const { prompt } = req.query\n-  if (!prompt) {\n-    res.status(400).send('prompt is required');\n-    return;\n-  }\n-  if (prompt.length < 4) {\n-    res.status(400).send('prompt is too short');\n-    return\n-  }\n-  try {\n-    const response = await axios.post('http://api/v1/ai-rodin', { prompt }, {\n-      headers: req.headers,\n-    });\n-    const response2 = await api.prompt(prompt);\n-    const response3 = await axios.put('http://api/v1/ai-rodin/' + response.data.id, { status: response2.data }, {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response3.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-\n-app.get('/v1/ai-rodin', async (req, res) => {\n-  try {\n-    const response = await axios.get('https://api/v1/ai-rodin', {\n-      headers: req.headers,\n-    });\n-    res.status(response.status).send(response.data);\n-  } catch (error) {\n-    console.error('Error details:', error); // 打印完整的错误信息\n-    res.status(error.response ? error.response.status : 500).send({\n-      message: 'Internal Server Error',\n-      details: error.response ? error.response.data : error.message,\n-    });\n-  }\n-});\n-app.get('/status', (req, res) => {\n-  api.status();\n-  res.send('Hello, status!');\n-});\n-app.get('/polygen', (req, res) => {\n-\n-  res.send(polygen.md5());\n-});\n-/*\n-Response: {\n-  message: 'Submitted. Please check progress via /api/v2/status and get download link via /api/v2/download',\n-  submit_time: '2024-09-27T11:56:44.756Z',\n-  uuid: 'de6c57a7-75b3-45c3-8ccc-3c5918af81b8',\n-  jobs: {\n-    uuids: [\n-      '3d349242-d3e0-4448-b05d-e285265ca0a2',\n-      '69cb46db-0690-47c9-b98f-412b322285da',\n-      '179526dc-5d19-4742-b498-856696012ac0',\n-      'b4558a96-4512-4fb5-b68e-134077629083',\n-      '731ebfdd-a29e-4374-9f89-342650c24373'\n-    ],\n-    subscription_key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoxLCJqb2JJZHMiOlsiM2QzNDkyNDItZDNlMC00NDQ4LWIwNWQtZTI4NTI2NWNhMGEyIiwiNjljYjQ2ZGItMDY5MC00N2M5LWI5OGYtNDEyYjMyMjI4NWRhIiwiMTc5NTI2ZGMtNWQxOS00NzQyLWI0OTgtODU2Njk2MDEyYWMwIiwiYjQ1NThhOTYtNDUxMi00ZmI1LWI2OGUtMTM0MDc3NjI5MDgzIiwiNzMxZWJmZGQtYTI5ZS00Mzc0LTlmODktMzQyNjUwYzI0MzczIl0sImlhdCI6MTcyNzQzODIwNH0.HU47vE7q39TcQpn8E3ZqSy0wJCln4uzLmQdxnKQ9IKA'\n-  }\n-}\n-  */\n-\n-// 启动服务器  \n-app.listen(PORT, () => {\n-  console.log(`Server is running on http://localhost:${PORT}`);\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1727684053604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n app.get('/', (req, res) => {\n   const token = req.headers['authorization']?.split(' ')[1];\n   res.send('Hel1222是山山水水 lo,2 Express!' + token);\n });\n-app.post('/status', async (req, res) => {\n+app.get('/status', async (req, res) => {\n \n   const { id } = req.query\n   if (!id) {\n     res.status(400).send('id is required');\n"
                },
                {
                    "date": 1727684074197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n     res.status(400).send('id is required');\n     return;\n   }\n   try {\n+    res.send(123);\n     const response = await axios.get('http://api/v1/ai-rodin/' + id, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n"
                },
                {
                    "date": 1727684093759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,10 @@\n   if (!id) {\n     res.status(400).send('id is required');\n     return;\n   }\n+\n+  res.send(123); return;\n   try {\n     res.send(123);\n     const response = await axios.get('http://api/v1/ai-rodin/' + id, {\n       headers: req.headers,\n"
                },
                {
                    "date": 1727684105305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n     res.status(400).send('id is required');\n     return;\n   }\n \n-  res.send(123); return;\n+  res.send(\"123\");\n+  return;\n   try {\n     res.send(123);\n     const response = await axios.get('http://api/v1/ai-rodin/' + id, {\n       headers: req.headers,\n"
                },
                {
                    "date": 1727684113536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,12 +19,11 @@\n     res.status(400).send('id is required');\n     return;\n   }\n \n-  res.send(\"123\");\n-  return;\n   try {\n-    res.send(123);\n+    res.send(\"123\");\n+    return;\n     const response = await axios.get('http://api/v1/ai-rodin/' + id, {\n       headers: req.headers,\n     });\n     res.status(response.status).send(response.data);\n"
                },
                {
                    "date": 1727684121716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,12 @@\n     return;\n   }\n \n   try {\n-    res.send(\"123\");\n     const response = await axios.get('http://api/v1/ai-rodin/' + id, {\n       headers: req.headers,\n     });\n+    res.send(\"123\");\n     res.status(response.status).send(response.data);\n   } catch (error) {\n     console.error('Error details:', error); // 打印完整的错误信息\n     res.status(error.response ? error.response.status : 500).send({\n"
                },
                {
                    "date": 1727684411317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,10 @@\n     const start = process.hrtime();\n     const response = await axios.get('http://api/v1/ai-rodin/' + id, {\n       headers: req.headers,\n     });\n+    const end = process.hrtime(start); // 结束计时\n \n-    const end = process.hrtime();\n-\n     const seconds = end[0] + end[1] / 1e9; // 转换为秒\n     res.send(seconds + \"\");\n     res.status(response.status).send(response.data);\n   } catch (error) {\n"
                }
            ],
            "date": 1727426341370,
            "name": "Commit-0",
            "content": "import express from 'express';\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\n// 设置根路由  \napp.get('/', (req, res) => {\n  res.send('Hello, Express!');\n});\n\n// 启动服务器  \napp.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`);\n});"
        }
    ]
}